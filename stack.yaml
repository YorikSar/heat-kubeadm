heat_template_version: 2017-02-24
description: Deploy Kubernetes cluster with kubeadm

parameters:
    key_name:
        type: string
        label: Key Name
        description: SSH key to be used for all instances
        default: ytl
    image:
        type: string
        label: Image
        description: Image to be used
        default: ubuntu-16-04-amd64-cloudimg    
    master_flavor:
        type: string
        label: Master Instance Type
        description: Type of instance (flavor) to deploy master node
        default: m1.small
    master_floating_ip:
        type: string
        label: Master Floating IP ID
        description: Floating IP for master node
        default: 24776f99-7599-4bdd-8a1a-1a551180eb4a
    slave_count:
        type: number
        label: Slave Count
        description: Number of slaves
        default: 3
    slave_flavor:
        type: string
        label: Slave Instance Type
        description: Type of instance (flavor) to deploy slave nodes
        default: m1.small
    slave_floating_ips:
        type: comma_delimited_list
        label: Slave Floating IP IDs
        description: Floating IP for master node
        default: 851660f0-3648-4560-9403-c68647e4aa99,32cc96ef-8590-4785-b660-c6e773c97f3d,6c9d42cb-ad7e-46dd-aca8-9a5cc628e5de
    public_network_id:
        type: string
        description: ID of the public network
        default: public
    resource_prefix:
        type: string
        description: Prefix to add to all resources
        default: k8s-
    dns_nameservers:
        type: comma_delimited_list
        label: DNS Nameservers
        description: DNS nameservers to use on nodes
        default: 8.8.8.8

resources:
    random_string:
        type: OS::Heat::RandomString
        properties:
            length: 8
            sequence: lowercase
    ##### Network #####
    internal_net:
        type: OS::Neutron::Net
        properties:
            admin_state_up: true
            name:
                str_replace:
                    template: $prefix$random-network
                    params:
                        $prefix: { get_param: resource_prefix }
                        $random: { get_resource: random_string }
    internal_subnet:
        type: OS::Neutron::Subnet
        properties:
            network_id: { get_resource: internal_net }
            cidr: 192.168.42.0/24
            gateway_ip: 192.168.42.1
            enable_dhcp: true
            dns_nameservers: { get_param: dns_nameservers }
            name:
                str_replace:
                    template: $prefix$random-subnet
                    params:
                        $prefix: { get_param: resource_prefix }
                        $random: { get_resource: random_string }
    internal_router:
        type: OS::Neutron::Router
        properties:
            admin_state_up: true
            external_gateway_info: { "network": { get_param: public_network_id }}
            name:
                str_replace:
                    template: $prefix$random-router
                    params:
                        $prefix: { get_param: resource_prefix }
                        $random: { get_resource: random_string }
    internal_router_interface:
        type: OS::Neutron::RouterInterface
        properties:
            router_id: { get_resource: internal_router }
            subnet_id: { get_resource: internal_subnet }
    ##### Master #####
    master_port:
        type: OS::Neutron::Port
        properties:
            admin_state_up: true
            network_id: { get_resource: internal_net }
            allowed_address_pairs:
                - ip_address: 10.0.0.0/8
    master_floatingip:
        type: OS::Neutron::FloatingIP
        external_id: { get_param: master_floating_ip }
        properties:
            floating_network: { get_param: public_network_id }
    master_floatingip_association:
        type: OS::Neutron::FloatingIPAssociation
        properties:
            floatingip_id: { get_param: master_floating_ip }
            port_id: { get_resource: master_port }
    master_instance:
        type: OS::Nova::Server
        properties:
            image: { get_param: image }
            flavor: { get_param: master_flavor }
            key_name: { get_param: key_name }
            networks:
                - port: { get_resource: master_port }
            name:
                str_replace:
                    template: $prefix$random-master
                    params:
                        $prefix: { get_param: resource_prefix }
                        $random: { get_resource: random_string }
            user_data_format: SOFTWARE_CONFIG
            user_data: { get_resource: master_user_data }
    master_user_data:
        type: OS::Heat::CloudConfig
        properties:
            cloud_config:
                #cloud-config
                manage_etc_hosts: localhost
                #package_upgrade: true
                packages:
                    - kubeadm=1.8.7-00
                    - kubernetes-cni=0.5.1-00
                    - kubelet=1.8.7-00
                    - kubectl=1.8.7-00
                    #- docker-ce=17.03.2~ce-0~ubuntu-xenial
                apt_sources:
                    docker.list:
                        source: "deb https://download.docker.com/linux/ubuntu xenial stable"
                        key: |
                            -----BEGIN PGP PUBLIC KEY BLOCK-----

                            mQINBFit2ioBEADhWpZ8/wvZ6hUTiXOwQHXMAlaFHcPH9hAtr4F1y2+OYdbtMuth
                            lqqwp028AqyY+PRfVMtSYMbjuQuu5byyKR01BbqYhuS3jtqQmljZ/bJvXqnmiVXh
                            38UuLa+z077PxyxQhu5BbqntTPQMfiyqEiU+BKbq2WmANUKQf+1AmZY/IruOXbnq
                            L4C1+gJ8vfmXQt99npCaxEjaNRVYfOS8QcixNzHUYnb6emjlANyEVlZzeqo7XKl7
                            UrwV5inawTSzWNvtjEjj4nJL8NsLwscpLPQUhTQ+7BbQXAwAmeHCUTQIvvWXqw0N
                            cmhh4HgeQscQHYgOJjjDVfoY5MucvglbIgCqfzAHW9jxmRL4qbMZj+b1XoePEtht
                            ku4bIQN1X5P07fNWzlgaRL5Z4POXDDZTlIQ/El58j9kp4bnWRCJW0lya+f8ocodo
                            vZZ+Doi+fy4D5ZGrL4XEcIQP/Lv5uFyf+kQtl/94VFYVJOleAv8W92KdgDkhTcTD
                            G7c0tIkVEKNUq48b3aQ64NOZQW7fVjfoKwEZdOqPE72Pa45jrZzvUFxSpdiNk2tZ
                            XYukHjlxxEgBdC/J3cMMNRE1F4NCA3ApfV1Y7/hTeOnmDuDYwr9/obA8t016Yljj
                            q5rdkywPf4JF8mXUW5eCN1vAFHxeg9ZWemhBtQmGxXnw9M+z6hWwc6ahmwARAQAB
                            tCtEb2NrZXIgUmVsZWFzZSAoQ0UgZGViKSA8ZG9ja2VyQGRvY2tlci5jb20+iQI3
                            BBMBCgAhBQJYrefAAhsvBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAAAoJEI2BgDwO
                            v82IsskP/iQZo68flDQmNvn8X5XTd6RRaUH33kXYXquT6NkHJciS7E2gTJmqvMqd
                            tI4mNYHCSEYxI5qrcYV5YqX9P6+Ko+vozo4nseUQLPH/ATQ4qL0Zok+1jkag3Lgk
                            jonyUf9bwtWxFp05HC3GMHPhhcUSexCxQLQvnFWXD2sWLKivHp2fT8QbRGeZ+d3m
                            6fqcd5Fu7pxsqm0EUDK5NL+nPIgYhN+auTrhgzhK1CShfGccM/wfRlei9Utz6p9P
                            XRKIlWnXtT4qNGZNTN0tR+NLG/6Bqd8OYBaFAUcue/w1VW6JQ2VGYZHnZu9S8LMc
                            FYBa5Ig9PxwGQOgq6RDKDbV+PqTQT5EFMeR1mrjckk4DQJjbxeMZbiNMG5kGECA8
                            g383P3elhn03WGbEEa4MNc3Z4+7c236QI3xWJfNPdUbXRaAwhy/6rTSFbzwKB0Jm
                            ebwzQfwjQY6f55MiI/RqDCyuPj3r3jyVRkK86pQKBAJwFHyqj9KaKXMZjfVnowLh
                            9svIGfNbGHpucATqREvUHuQbNnqkCx8VVhtYkhDb9fEP2xBu5VvHbR+3nfVhMut5
                            G34Ct5RS7Jt6LIfFdtcn8CaSas/l1HbiGeRgc70X/9aYx/V/CEJv0lIe8gP6uDoW
                            FPIZ7d6vH+Vro6xuWEGiuMaiznap2KhZmpkgfupyFmplh0s6knymuQINBFit2ioB
                            EADneL9S9m4vhU3blaRjVUUyJ7b/qTjcSylvCH5XUE6R2k+ckEZjfAMZPLpO+/tF
                            M2JIJMD4SifKuS3xck9KtZGCufGmcwiLQRzeHF7vJUKrLD5RTkNi23ydvWZgPjtx
                            Q+DTT1Zcn7BrQFY6FgnRoUVIxwtdw1bMY/89rsFgS5wwuMESd3Q2RYgb7EOFOpnu
                            w6da7WakWf4IhnF5nsNYGDVaIHzpiqCl+uTbf1epCjrOlIzkZ3Z3Yk5CM/TiFzPk
                            z2lLz89cpD8U+NtCsfagWWfjd2U3jDapgH+7nQnCEWpROtzaKHG6lA3pXdix5zG8
                            eRc6/0IbUSWvfjKxLLPfNeCS2pCL3IeEI5nothEEYdQH6szpLog79xB9dVnJyKJb
                            VfxXnseoYqVrRz2VVbUI5Blwm6B40E3eGVfUQWiux54DspyVMMk41Mx7QJ3iynIa
                            1N4ZAqVMAEruyXTRTxc9XW0tYhDMA/1GYvz0EmFpm8LzTHA6sFVtPm/ZlNCX6P1X
                            zJwrv7DSQKD6GGlBQUX+OeEJ8tTkkf8QTJSPUdh8P8YxDFS5EOGAvhhpMBYD42kQ
                            pqXjEC+XcycTvGI7impgv9PDY1RCC1zkBjKPa120rNhv/hkVk/YhuGoajoHyy4h7
                            ZQopdcMtpN2dgmhEegny9JCSwxfQmQ0zK0g7m6SHiKMwjwARAQABiQQ+BBgBCAAJ
                            BQJYrdoqAhsCAikJEI2BgDwOv82IwV0gBBkBCAAGBQJYrdoqAAoJEH6gqcPyc/zY
                            1WAP/2wJ+R0gE6qsce3rjaIz58PJmc8goKrir5hnElWhPgbq7cYIsW5qiFyLhkdp
                            YcMmhD9mRiPpQn6Ya2w3e3B8zfIVKipbMBnke/ytZ9M7qHmDCcjoiSmwEXN3wKYI
                            mD9VHONsl/CG1rU9Isw1jtB5g1YxuBA7M/m36XN6x2u+NtNMDB9P56yc4gfsZVES
                            KA9v+yY2/l45L8d/WUkUi0YXomn6hyBGI7JrBLq0CX37GEYP6O9rrKipfz73XfO7
                            JIGzOKZlljb/D9RX/g7nRbCn+3EtH7xnk+TK/50euEKw8SMUg147sJTcpQmv6UzZ
                            cM4JgL0HbHVCojV4C/plELwMddALOFeYQzTif6sMRPf+3DSj8frbInjChC3yOLy0
                            6br92KFom17EIj2CAcoeq7UPhi2oouYBwPxh5ytdehJkoo+sN7RIWua6P2WSmon5
                            U888cSylXC0+ADFdgLX9K2zrDVYUG1vo8CX0vzxFBaHwN6Px26fhIT1/hYUHQR1z
                            VfNDcyQmXqkOnZvvoMfz/Q0s9BhFJ/zU6AgQbIZE/hm1spsfgvtsD1frZfygXJ9f
                            irP+MSAI80xHSf91qSRZOj4Pl3ZJNbq4yYxv0b1pkMqeGdjdCYhLU+LZ4wbQmpCk
                            SVe2prlLureigXtmZfkqevRz7FrIZiu9ky8wnCAPwC7/zmS18rgP/17bOtL4/iIz
                            QhxAAoAMWVrGyJivSkjhSGx1uCojsWfsTAm11P7jsruIL61ZzMUVE2aM3Pmj5G+W
                            9AcZ58Em+1WsVnAXdUR//bMmhyr8wL/G1YO1V3JEJTRdxsSxdYa4deGBBY/Adpsw
                            24jxhOJR+lsJpqIUeb999+R8euDhRHG9eFO7DRu6weatUJ6suupoDTRWtr/4yGqe
                            dKxV3qQhNLSnaAzqW/1nA3iUB4k7kCaKZxhdhDbClf9P37qaRW467BLCVO/coL3y
                            Vm50dwdrNtKpMBh3ZpbB1uJvgi9mXtyBOMJ3v8RZeDzFiG8HdCtg9RvIt/AIFoHR
                            H3S+U79NT6i0KPzLImDfs8T7RlpyuMc4Ufs8ggyg9v3Ae6cN3eQyxcK3w0cbBwsh
                            /nQNfsA6uu+9H7NhbehBMhYnpNZyrHzCmzyXkauwRAqoCbGCNykTRwsur9gS41TQ
                            M8ssD1jFheOJf3hODnkKU+HKjvMROl1DK7zdmLdNzA1cvtZH/nCC9KPj1z8QC47S
                            xx+dTZSx4ONAhwbS/LN3PoKtn8LPjY9NP9uDWI+TWYquS2U+KHDrBDlsgozDbs/O
                            jCxcpDzNmXpWQHEtHU7649OXHP7UeNST1mCUCH5qdank0V1iejF6/CfTFU4MfcrG
                            YT90qFF93M3v01BbxP+EIY2/9tiIPbrd
                            =0YYh
                            -----END PGP PUBLIC KEY BLOCK-----
                    kubernetes.list:
                        source: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
                        key: |
                            -----BEGIN PGP PUBLIC KEY BLOCK-----
                            Version: GnuPG v1

                            mQENBFUd6rIBCAD6mhKRHDn3UrCeLDp7U5IE7AhhrOCPpqGF7mfTemZYHf/5Jdjx
                            cOxoSFlK7zwmFr3lVqJ+tJ9L1wd1K6P7RrtaNwCiZyeNPf/Y86AJ5NJwBe0VD0xH
                            TXzPNTqRSByVYtdN94NoltXUYFAAPZYQls0x0nUD1hLMlOlC2HdTPrD1PMCnYq/N
                            uL/Vk8sWrcUt4DIS+0RDQ8tKKe5PSV0+PnmaJvdF5CKawhh0qGTklS2MXTyKFoqj
                            XgYDfY2EodI9ogT/LGr9Lm/+u4OFPvmN9VN6UG+s0DgJjWvpbmuHL/ZIRwMEn/tp
                            uneaLTO7h1dCrXC849PiJ8wSkGzBnuJQUbXnABEBAAG0QEdvb2dsZSBDbG91ZCBQ
                            YWNrYWdlcyBBdXRvbWF0aWMgU2lnbmluZyBLZXkgPGdjLXRlYW1AZ29vZ2xlLmNv
                            bT6JAT4EEwECACgFAlUd6rICGy8FCQWjmoAGCwkIBwMCBhUIAgkKCwQWAgMBAh4B
                            AheAAAoJEDdGwginMXsPcLcIAKi2yNhJMbu4zWQ2tM/rJFovazcY28MF2rDWGOnc
                            9giHXOH0/BoMBcd8rw0lgjmOosBdM2JT0HWZIxC/Gdt7NSRA0WOlJe04u82/o3OH
                            WDgTdm9MS42noSP0mvNzNALBbQnlZHU0kvt3sV1YsnrxljoIuvxKWLLwren/GVsh
                            FLPwONjw3f9Fan6GWxJyn/dkX3OSUGaduzcygw51vksBQiUZLCD2Tlxyr9NvkZYT
                            qiaWW78L6regvATsLc9L/dQUiSMQZIK6NglmHE+cuSaoK0H4ruNKeTiQUw/EGFaL
                            ecay6Qy/s3Hk7K0QLd+gl0hZ1w1VzIeXLo2BRlqnjOYFX4A=
                            =HVTm
                            -----END PGP PUBLIC KEY BLOCK-----
                runcmd:
                    - - 'systemd-run'
                      - '--on-boot=0s'
                      - '--unit=kubeadm-install'
                      - 'bash'
                      - '-c'
                      - str_replace:
                            params:
                                $floatingip: { get_attr: [master_floatingip, floating_ip_address] }
                                $token: { get_attr: [token, value] }
                            template: { get_file: master.sh }

    ##### Slaves #####
    slaves:
        type: OS::Heat::ResourceGroup
        properties:
            count: { get_param: slave_count }
            resource_def:
                type: slave.yaml
                properties:
                    index: "%index%"
                    key_name: { get_param: key_name }
                    image: { get_param: image }
                    slave_flavor: { get_param: slave_flavor }
                    slave_floating_ips: { get_param: slave_floating_ips }
                    slave_name:
                        str_replace:
                            template: $prefix$random-slave-%index%
                            params:
                                $prefix: { get_param: resource_prefix }
                                $random: { get_resource: random_string }
                    internal_net: { get_resource: internal_net }
                    master_ip: { get_attr: [ master_port, fixed_ips, 0, ip_address ] }
                    token: { get_attr: [token, value] }
    ##### Token for kubeadm ####
    token_part_1:
        type: OS::Heat::RandomString
        properties:
            length: 6
            character_classes: []
            character_sequences:
                - {min: 6, sequence: "0123456789abcdef"}
    token_part_2:
        type: OS::Heat::RandomString
        properties:
            length: 16
            character_classes: []
            character_sequences:
                - {min: 16, sequence: "0123456789abcdef"}
    token:
        type: OS::Heat::Value
        properties:
            value:
                str_replace:
                    template: $part1.$part2
                    params:
                        $part1: { get_resource: token_part_1 }
                        $part2: { get_resource: token_part_2 }
